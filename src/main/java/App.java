import java.util.ArrayList;
import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        List<SalesPromotion> SALES_PROMOTIONS = salesPromotionRepository.findAll();

        int totalDiscountPrice = 0;
        List<String> discountList = new ArrayList<>();
        discountList.add("============= 订餐明细 =============");
        for (String _orderItem : inputs) {
            String[] orderItem = _orderItem.split(" x ");
            String itemId = orderItem[0];
            int orderNumber = Integer.parseInt(orderItem[1]);
            Item item = findItem(itemId);
            if (item != null) {
                int amount = (int) item.getPrice() * orderNumber;
                discountList.add(item.getName() + " x " + orderNumber + " = " + amount + "元");
                totalDiscountPrice += amount;
            }
        }

        if (totalDiscountPrice >= 30) {
            discountList.add("-----------------------------------");
            discountList.add("使用优惠:");
            discountList.add(SALES_PROMOTIONS.get(0).getDisplayName() + "，省" + (totalDiscountPrice / 30) * 6 + "元");
            totalDiscountPrice -= (totalDiscountPrice / 30) * 6;
        }
        discountList.add("-----------------------------------");
        discountList.add("总计：" + totalDiscountPrice + "元");
        discountList.add("===================================");

        int totalOffPrice = 0;
        int offPrice = 0;
        List<String> offList = new ArrayList<>();
        offList.add("============= 订餐明细 =============");
        List<String> discountItems = new ArrayList<>();
        for (String _orderItem : inputs) {
            String[] orderItem = _orderItem.split(" x ");
            String itemId = orderItem[0];
            int orderNumber = Integer.parseInt(orderItem[1]);
            Item item = findItem(itemId);
            String currentName = null;
            int currentPrice = 0;
            if (item != null) {
                currentName = item.getName();
                currentPrice = (int) item.getPrice();
                int amount = (int) item.getPrice() * orderNumber;
                offList.add(item.getName() + " x " + orderNumber + " = " + amount + "元");
                totalOffPrice += amount;
            }
            if (SALES_PROMOTIONS.get(1).getRelatedItems().contains(itemId) && currentName != null) {
                totalOffPrice -= currentPrice * orderNumber / 2;
                discountItems.add(currentName);
                offPrice += currentPrice * orderNumber / 2;
            }
        }

        offList.add("-----------------------------------");
        offList.add("使用优惠:");
        offList.add(SALES_PROMOTIONS.get(1).getDisplayName() + "(" + String.join("，", discountItems) + ")，省" + offPrice + "元");
        offList.add("-----------------------------------");
        offList.add("总计：" + totalOffPrice + "元");
        offList.add("===================================");

        return String.join("\n", totalOffPrice < totalDiscountPrice ? offList : discountList);
    }

    private Item findItem(String itemId) {
        List<Item> allItems = itemRepository.findAll();
        for (Item item : allItems) {
            if (item.getId().equals(itemId)) {
                return item;
            }
        }
        return null;
    }
}
